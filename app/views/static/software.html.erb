<div class="container" style="margin-top:50px">

<h1>Software</h1>

<p style="margin-top:15px">I was four years old when I wrote my first computer program. It was a simple BASIC ‘Hello World’ on the Apple II that my father had recently purchased. My love of computers had begun, and this love would never leave my life. I grew up with computers in the household, starting with several iterations of the Apple II. Later I moved into Mac, only hitting PCs after the Windows era had begun. After growing up around technology, it was an easy leap to study it in college and use the related skills to generate income. In the interests not having this look like a resume, I will expound on the things that I like, rather than enumerate things that I have done.
</p>

<h3>Open Source Software</h3>
<p>
Long ago, programmers wrote programs and sold them. Every bit of code was new, and every bit was capitalized upon. If you wanted to use somebody else’s code within your own, you had to pay them. People started to get sick of paying other people and began to release their own software for free. Others took this code, improved it, and released it back to the commons. Throw in the massive growth of the internet and you have a amazing explosion of creativity. Free/Open Source software ultimately lowers the cost of software by allowing programmers to focus on the specifics of their problems, rather than writing their own compiler or their own operating system, or solving any other problem that has already been solved. At a cost of free, the barrier to entry into the world of software does not revolve around purchasing software to make software, but rather on practical issues like hardware and internet service.
</p>
<h3>Linux</h3>
<p>
Atop the Open Source food chain sits Linux. It is ubiquitous and easy to take for granted. It runs on just about any hardware you can imagine. If you want to teach yourself about the guts of an OS, just play with the Linux source. It’s hard to imagine a time when people actually paid somebody for an OS. Just kidding, I dual boot Windows 7 and actually enjoy it as a gaming platform. But if I want to be productive, linux is easier to use and games are hard to come by, keeping the temptation at bay.
</p>
<h3>Postgresql</h3>
<p>
Databases are cool. Oracle not so much. Postgresql is not Oracle. Need I say more?
</p>
<h3>C++</h3>
<p>Not quite as fast as C, but much more readable. Faster than Java with the same level of abstraction. Its verbosity is excused by the fact that is a superset of C. Java has no such excuse. Many folks hate it, it is easy to make ugly with templates, but I will always have a soft spot in my heart for C++.
</p>
<h3>jQuery</h4>
<p>
jQuery is an awesome way to use javascript without having to actually use much javascript at all. Which is a good thing.
</p>
<h3>Perl</h3>
<p>
It is flexible and powerful, but not amazingly readable. Perl gets points for remaining relevant and useful in its ripe old age. Bonus points for CPAN.
</p>
<h3>Ruby</h3>
<p>Ruby is like perl, only much more readable. It’s perl with objects built in, rather than bolted on. Everything that I find annoying about perl seems to have been dealt with. Caveat: I haven’t been using it long enough to come up with reasons to not like it.
</p>
<h3>Android</h3>
<p>I look forward to the day when I can plug a USB cable (or its futuristic analog) into every single electronic device in my world and do things to them. Until then I will settle for my Android Phone.
</p>
</div> <!-- /container -->
